{
  "id": "vehicle",
  "name": "Vehicle Graph",
  "type": "graph",
  "nodes": [
    {
      "id": "$start",
      "name": "Vehicle",
      "type": "nest",
      "outputs": [
        {
          "id": "$out"
        }
      ]
    },
    {
      "id": "Vehicle.before",
      "name": "before",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "phase": "BEHAVE",
        "match": "ALL",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "Vehicle.executeTask",
      "name": "executeTask",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 1,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.executeTask",
      "name": "executeTask Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["task_id"],
            "value": "",
            "reference": [],
            "compareOperator": "EMPTY",
            "negation": true,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateRescuePersonnel",
      "name": "simulateRescuePersonnel",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateRescuePersonnel",
      "name": "simulateRescuePersonnel Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "rescue_personnel",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateStringingEquipment",
      "name": "simulateStringingEquipment",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateStringingEquipment",
      "name": "simulateStringingEquipment Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "stringing_equipment",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateHelicopter",
      "name": "simulateHelicopter",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateHelicopter",
      "name": "simulateHelicopter Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "helicopter",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateDrainDevice",
      "name": "simulateDrainDevice",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateDrainDevice",
      "name": "simulateDrainDevice Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "['vertical_absorbs_water','mother_absorbs_water','drainage']",
            "reference": [],
            "compareOperator": "AMONG",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateTransport",
      "name": "simulateTransport",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateTransport",
      "name": "simulateTransport Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "transport",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateBoatBridge",
      "name": "simulateBoatBridge",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateBoatBridge",
      "name": "simulateBoatBridge Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "boat_bridge",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulate",
      "name": "simulate",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulate",
      "name": "simulate Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "drone",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateDumper",
      "name": "simulateDumper",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateDumper",
      "name": "simulateDumper Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "dumper",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateDozer",
      "name": "simulateDozer",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateDozer",
      "name": "simulateDozer Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "dozer",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateDigger",
      "name": "simulateDigger",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateDigger",
      "name": "simulateDigger Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "digger",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simulateBarge",
      "name": "simulateBarge",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 2,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simulateBarge",
      "name": "simulateBarge Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["vehicle/type"],
            "value": "['barge','self_unloading_barge']",
            "reference": [],
            "compareOperator": "AMONG",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.helicopterAction",
      "name": "helicopterAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.helicopterAction",
      "name": "helicopterAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "helicopter",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.drainDeviceAction",
      "name": "drainDeviceAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.drainDeviceAction",
      "name": "drainDeviceAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'drainage'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "['vertical_absorbs_water','mother_absorbs_water','drainage']",
            "reference": [],
            "compareOperator": "AMONG",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.transportAction",
      "name": "transportAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.transportAction",
      "name": "transportAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'transfer'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "transport",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.boatBridgeAction",
      "name": "boatBridgeAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.boatBridgeAction",
      "name": "boatBridgeAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'transfer'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "boat_bridge",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.dumperAction",
      "name": "dumperAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.dumperAction",
      "name": "dumperAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "dumper",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.dozerAction",
      "name": "dozerAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.dozerAction",
      "name": "dozerAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": true,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "dozer",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.bargeAction",
      "name": "bargeAction",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.bargeAction",
      "name": "bargeAction Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["vehicle/type"],
            "value": "['barge','self_unloading_barge']",
            "reference": [],
            "compareOperator": "AMONG",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.simpleMove",
      "name": "simpleMove",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.simpleMove",
      "name": "simpleMove Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'move'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.moveOnRoad",
      "name": "moveOnRoad",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.moveOnRoad",
      "name": "moveOnRoad Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "['dozer','dumper']",
            "reference": [],
            "compareOperator": "AMONG",
            "negation": false,
            "partial": false
          }
        ]
      }
    },
    {
      "id": "Vehicle.moveInSky",
      "name": "moveInSky",
      "type": "action",
      "inputs": [
        {
          "id": "context",
          "type": "u",
          "name": "context",
          "desc": "Parameter: context (Context)"
        },
        {
          "id": "instance",
          "type": "u",
          "name": "instance",
          "desc": "Parameter: instance (InstanceIO)"
        },
        {
          "id": "$in"
        }
      ],
      "state": {
        "order": 3,
        "phase": "BEHAVE",
        "sources": [],
        "targets": [],
        "contract": {
          "value": ""
        }
      }
    },
    {
      "id": "$condition/Vehicle.moveInSky",
      "name": "moveInSky Condition",
      "type": "condition",
      "inputs": [
        {
          "id": "$in"
        }
      ],
      "outputs": [
        {
          "id": "$out"
        }
      ],
      "state": {
        "order": 0,
        "match": "ALL",
        "conditions": [
          {
            "segments": ["controlled/commands"],
            "value": "{'command': 'delivery'}",
            "reference": [],
            "compareOperator": "CONTAINS",
            "negation": false,
            "partial": true
          },
          {
            "segments": ["controlled/action"],
            "value": "move",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          },
          {
            "segments": ["vehicle/type"],
            "value": "helicopter",
            "reference": [],
            "compareOperator": "EQUALS",
            "negation": false,
            "partial": false
          }
        ]
      }
    }
  ],
  "edges": [
    {
      "input": {
        "node": "$condition/Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.executeTask",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateTransport",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulate",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateDumper",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateDozer",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateDigger",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simulateBarge",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "$start",
        "socket": "$out"
      },
      "output": {
        "node": "Vehicle.before",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.before",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.executeTask",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateRescuePersonnel",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateStringingEquipment",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateHelicopter",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateDrainDevice",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateTransport",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateBoatBridge",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulate",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateDumper",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateDozer",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateDigger",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.executeTask",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simulateBarge",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateRescuePersonnel",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateStringingEquipment",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateHelicopter",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDrainDevice",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateTransport",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBoatBridge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulate",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDumper",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDozer",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateDigger",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.helicopterAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.drainDeviceAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.transportAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.boatBridgeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dumperAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.dozerAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.bargeAction",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.simpleMove",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveOnRoad",
        "socket": "$in"
      }
    },
    {
      "input": {
        "node": "Vehicle.simulateBarge",
        "socket": "$out"
      },
      "output": {
        "node": "$condition/Vehicle.moveInSky",
        "socket": "$in"
      }
    }
  ]
}
